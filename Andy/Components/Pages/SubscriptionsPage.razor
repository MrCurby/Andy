@page "/Subscriptions"
@rendermode InteractiveServer
@using Andy.Core.DTOs
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.FluentUI.AspNetCore.Components.Icons.Regular

<BasePage Title="Subsciption" Icon="@(new Icons.Regular.Size28.CoinMultiple())">
    @if (SubscriptionList == null)
    {
        <FluentProgressRing />
        <p>Lade Abonnements...</p>
    }
    else
    {
        <FluentStack Orientation="Orientation.Horizontal">
            @* <--- linke Seite (Übersicht) ---/>*@
            <FluentStack Orientation="Orientation.Vertical" Style="width:60%;">
                @* Aktive Einträge *@
                <FluentStack Orientation="Orientation.Vertical" Style="margin-bottom:12px;">
                    <FluentLabel Typo="Typography.PaneHeader">Aktive Einträge (@(SubscriptionList.Count(s => s.IsActive == true)))</FluentLabel>
                </FluentStack>

                @foreach (var Subscription in SubscriptionList.Where(sl => sl.IsActive == true))
                {
                    <FluentStack Orientation="Orientation.Horizontal" Class="subscription-row" HorizontalAlignment="HorizontalAlignment.Center" Style="justify-content:space-between;">
                        <FluentStack Orientation="Orientation.Horizontal" HorizontalAlignment="HorizontalAlignment.Center" Style="gap:12px; min-width:0;">
                            <FluentStack Orientation="Orientation.Vertical" Style="min-width:0;">
                                <FluentLabel Typo="Typography.PaneHeader" Style="white-space:nowrap; overflow:hidden; text-overflow:ellipsis;">@Subscription.Name</FluentLabel>
                                <FluentLabel Typo="Typography.Body" Style="white-space:nowrap; overflow:hidden; text-overflow:ellipsis; color:var(--neutral-foreground-2);">@Subscription.Memo</FluentLabel>
                            </FluentStack>
                        </FluentStack>

                        <FluentStack Orientation="Orientation.Horizontal" HorizontalAlignment="HorizontalAlignment.Center" Style="gap:8px;">
                            <FluentLabel Typo="Typography.Subject" Style="min-width:80px; text-align:right;">@Subscription.Amount?.ToString("C")</FluentLabel>
                            <FluentButton Appearance="Appearance.Lightweight" Color="@(Color.Success.ToAttributeValue())" @onclick="() => Edit(Subscription)" Title="Bearbeiten" Style="padding:6px 8px;">Bearbeiten</FluentButton>
                            <FluentButton Appearance="Appearance.Lightweight" Color="@(Color.Error.ToAttributeValue())" @onclick="() => DeleteSubscriptionAsync(Subscription)" Title="Löschen" Style="padding:6px 8px;">Löschen</FluentButton>
                        </FluentStack>
                    </FluentStack>
                }

                <hr style="border: none; border-top: 1px solid rgba(0,0,0,0.08); margin: 16px 0;" />

                @* Inaktive Einträge *@
                <FluentStack Orientation="Orientation.Vertical" Style="margin-bottom:12px;">
                    <FluentLabel Typo="Typography.PaneHeader">Inaktive Einträge (@(SubscriptionList.Count(s => s.IsActive == false)))</FluentLabel>
                </FluentStack>

                @foreach (var Subscription in SubscriptionList.Where(sl => sl.IsActive == false))
                {
                    <FluentStack Orientation="Orientation.Horizontal" Class="subscription-row inactive-entry" Align="Alignment.Center" Style="justify-content:space-between;">
                        <FluentStack Orientation="Orientation.Horizontal" Align="Alignment.Center" Style="gap:12px; min-width:0;">
                            <FluentStack Orientation="Orientation.Vertical" Style="min-width:0;">
                                <FluentLabel Typo="Typography.PaneHeader" Style="white-space:nowrap; overflow:hidden; text-overflow:ellipsis;">@((Subscription.Name ?? string.Empty).ToString())</FluentLabel>
                                <FluentLabel Typo="Typography.Body" Style="white-space:nowrap; overflow:hidden; text-overflow:ellipsis; color:var(--neutral-foreground-2);">@Subscription.Memo</FluentLabel>
                            </FluentStack>
                        </FluentStack>

                        <FluentLabel Typo="Typography.Subject" Style="min-width:80px; text-align:right;">@Subscription.Amount?.ToString("C")</FluentLabel>
                    </FluentStack>
                }
            </FluentStack>

            @* <--- rechte Seite (bearbeiten) ---/>*@
            <FluentStack Orientation="Orientation.Vertical" Style="width: 100%; padding-left:16px;">
                @if (_selectedSubscription == null)
                {
                    <FluentStack>
                        <FluentLabel Typo="Typography.PaneHeader">Kein Eintrag ausgewählt</FluentLabel>
                        <FluentSpacer />
                        <FluentStack Orientation="Orientation.Horizontal">
                            <FluentButton Appearance="Appearance.Accent" @onclick="NewSubscription">Neues Abonnement</FluentButton>
                        </FluentStack>
                    </FluentStack>
                }
                else if (_editMode)
                {
                    <EditForm Model="_selectedSubscription" OnValidSubmit="@(Save)">

                        @if (_selectedSubscription != null)
                        {
                            <FluentStack Orientation="Orientation.Vertical">
                                <FluentLabel Typo="Typography.PaneHeader">Abonnement bearbeiten: @_selectedSubscription?.Name</FluentLabel>

                                <FluentTextField Label="Name" @bind-Value="@_selectedSubscription.Name" Required="true" />
                                <FluentNumberField Label="Betrag" @bind-Value="_selectedSubscription.Amount" Required="true" />
                                <FluentTextArea Cols="6" Style="width:100%;" Label="Memo" @bind-Value="_selectedSubscription.Memo" />

                                <FluentStack Orientation="Orientation.Horizontal" Style="margin-top:12px; gap:8px;">
                                    <FluentButton Type="ButtonType.Submit" Appearance="Appearance.Accent">Speichern</FluentButton>
                                    <FluentButton Type="ButtonType.Button" Appearance="Appearance.Accent" @onclick="CancelEdit">Abbrechen</FluentButton>
                                </FluentStack>
                            </FluentStack>
                        }
                    </EditForm>
                }
            </FluentStack>
        </FluentStack>
    }
</BasePage>


